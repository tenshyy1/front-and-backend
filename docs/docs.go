// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Возвращает список уникальных категорий",
                "produces": [
                    "application/json"
                ],
                "summary": "Получение списка категорий",
                "responses": {
                    "200": {
                        "description": "Список категорий\" example=[\"Electronics\",\"Computers\",\"Gadgets\"]",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Возвращает список всех продуктов",
                "produces": [
                    "application/json"
                ],
                "summary": "Получение всех продуктов",
                "responses": {
                    "200": {
                        "description": "Список продуктов\" example=[{\"id\":1,\"name\":\"Laptop\",\"description\":\"High-performance laptop\",\"price\":999.99,\"categories\":\"Electronics, Computers\"}]",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Product"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Создает новый продукт с указанными параметрами",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Создание нового продукта",
                "parameters": [
                    {
                        "description": "Данные продукта",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Успешно созданный продукт\" example={\"id\":1,\"name\":\"Laptop\",\"description\":\"High-performance laptop\",\"price\":999.99,\"categories\":\"Electronics, Computers\"}",
                        "schema": {
                            "$ref": "#/definitions/main.Product"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации\" example={\"error\":\"Ошибка парсинга данных: name is required\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера\" example={\"error\":\"Ошибка при сохранении в базу: database error\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Возвращает информацию о конкретном продукте",
                "produces": [
                    "application/json"
                ],
                "summary": "Получение продукта по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные продукта\" example={\"id\":1,\"name\":\"Laptop\",\"description\":\"High-performance laptop\",\"price\":999.99,\"categories\":\"Electronics, Computers\"}",
                        "schema": {
                            "$ref": "#/definitions/main.Product"
                        }
                    },
                    "404": {
                        "description": "Продукт не найден\" example={\"error\":\"Product not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет существующий продукт по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Обновление продукта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные продукта",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Обновленный продукт\" example={\"id\":1,\"name\":\"Updated Laptop\",\"description\":\"Updated description\",\"price\":1099.99,\"categories\":\"Electronics, Gadgets\"}",
                        "schema": {
                            "$ref": "#/definitions/main.Product"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации\" example={\"error\":\"name is required\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Продукт не найден\" example={\"error\":\"Product not found\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера\" example={\"error\":\"Failed to save product\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет продукт по ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Удаление продукта",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID продукта",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное удаление\" example={\"message\":\"Product deleted successfully\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера\" example={\"error\":\"Failed to delete product\"}",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Product": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
